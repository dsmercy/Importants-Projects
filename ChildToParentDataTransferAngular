/// In the child component, define an Output property using the @Output decorator. This property will emit an event to notify the parent component.

import { Component, EventEmitter, Output } from '@angular/core';

@Component({
  selector: 'app-child',
  template: `
    <button (click)="sendData()">Send Data</button>
  `
})
export class ChildComponent {
  @Output() dataEvent = new EventEmitter<string>();

  sendData() {
    const data = 'Hello from child!';
    this.dataEvent.emit(data);
  }
}


///In the parent component, bind to the child component's event using the event binding syntax (event)="method()". In the method, you can retrieve the emitted data.

import { Component } from '@angular/core';

@Component({
  selector: 'app-parent',
  template: `
    <app-child (dataEvent)="receiveData($event)"></app-child>
  `
})
export class ParentComponent {
  receiveData(data: string) {
    console.log('Data received from child:', data);
  }
}
