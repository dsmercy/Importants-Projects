using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

public class ApiClient
{
    private readonly HttpClient _httpClient;

    public ApiClient(HttpClient httpClient)
    {
        _httpClient = httpClient ?? throw new ArgumentNullException(nameof(httpClient));
    }

    public async Task<TResponse> CallApi<TRequest, TResponse>(
        string url,
        HttpMethod method,
        TRequest requestData = default,
        TimeSpan? timeout = null,
        string accessToken = null)
    {
        if (url == null) throw new ArgumentNullException(nameof(url));

        var request = new HttpRequestMessage
        {
            RequestUri = new Uri(url),
            Method = method,
        };

        if (accessToken != null)
        {
            request.Headers.Add("Authorization", $"Bearer {accessToken}");
        }

        if (requestData != null)
        {
            var json = JsonConvert.SerializeObject(requestData);
            request.Content = new StringContent(json, Encoding.UTF8, "application/json");
        }

        if (timeout.HasValue)
        {
            _httpClient.Timeout = timeout.Value;
        }

        var response = await _httpClient.SendAsync(request);

        if (!response.IsSuccessStatusCode)
        {
            // Handle error responses here if needed
            throw new HttpRequestException($"API request failed with status code {response.StatusCode}");
        }

        var responseContent = await response.Content.ReadAsStringAsync();
        return JsonConvert.DeserializeObject<TResponse>(responseContent);
    }
}

// call generic function

class Program
{
    static async Task Main()
    {
        var httpClient = new HttpClient();
        var apiClient = new ApiClient(httpClient);

        // Example GET request with timeout and access token
        var responseData = await apiClient.CallApi<object, YourResponseClass>(
            "https://api.example.com/resource",
            HttpMethod.Get,
            timeout: TimeSpan.FromSeconds(10),
            accessToken: "your_access_token_here"
        );

        // Example POST request with timeout and access token
        var requestData = new YourRequestClass { /* Populate request data */ };
        var responseDataPost = await apiClient.CallApi<YourRequestClass, YourResponseClass>(
            "https://api.example.com/resource",
            HttpMethod.Post,
            requestData,
            timeout: TimeSpan.FromSeconds(10),
            accessToken: "your_access_token_here"
        );

        // Handle the responseData and responseDataPost as needed
    }
}


